image: node:16

variables:
  no_proxy: registry.npmjs.org,.inso-w.com
  NO_PROXY: '$no_proxy'
  npm_config_cache: '${CI_PROJECT_DIR}/.npm'
  CONTAINER_REGISTRY: https://index.docker.io/v1/

.cache: &node_cache
    key: node_modules
    paths:
      - .npm
      - node_modules

stages:
  - setup
  - audit
  - test
  - style-check
  - deploy

npm:install:
  stage: setup
  cache:
    <<: *node_cache
    policy: push
  script:
    - cd frontend
    - npm ci -d --prefer-offline

npm:audit:
  stage: audit
  cache:
    <<: *node_cache
    policy: pull
  script:
    - cd frontend
    - npm audit

#backend:
#  image: maven:3.8-amazoncorretto-17
#  stage: build
#  script:
#    - cd backend
#    - mvn clean install
#  artifacts:
#    paths:
#      - target/

frontend-test:
  image: node
  stage: test
  script: 
    - cd frontend
    - npm install vitest
    - npm run test

frontend-style-check:
   stage: style-check
   script:
     - cd frontend
     #- npm install --save-dev eslint-config-react-app eslint@^8.0.0
     - node_modules/eslint/bin/eslint.js "src/**/*.{js,jsx}"

kaniko:build:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - cd frontend
    - echo "{\"auths\":{\"${CONTAINER_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_HUB_USER}" "${DOCKER_HUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "diason/waecm:test"


